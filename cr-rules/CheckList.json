[
  {
    "id": "CL-GC-01",
    "category": "通用原则",
    "subcategory": "通用关注点",
    "description": "代码是否符合逻辑（准确性）、代码规范、设计模式等要求。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CL-GC-02",
    "category": "通用原则",
    "subcategory": "通用关注点",
    "description": "关注变更程序对整体功能模块或应用群组运行的整体影响。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CL-GC-03",
    "category": "通用原则",
    "subcategory": "通用关注点",
    "description": "多人研发程序模块之间交互是否符合方案设计要求。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium High"
  },
  {
    "id": "CL-GC-04",
    "category": "通用原则",
    "subcategory": "通用关注点",
    "description": "功能程序是否闭环，是否综合考虑到各种异常情况",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CL-AC-01",
    "category": "通用原则",
    "subcategory": "准确性",
    "description": "代码实现的功能是否满足需求，是否与设计相符。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CL-AC-02",
    "category": "通用原则",
    "subcategory": "准确性",
    "description": "提交代码是否填写详细的修改说明。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium High"
  },
  {
    "id": "CL-AC-03",
    "category": "通用原则",
    "subcategory": "准确性",
    "description": "核对提交人填写的修改要点与实际提交的程序修改是否一致。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium High"
  },
  {
    "id": "CL-AC-04",
    "category": "通用原则",
    "subcategory": "准确性",
    "description": "涉及接口或服务调用时，需要核对输入参数及返回参数处理是否正确，保证与文档接口约定一致。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium High"
  },
  {
    "id": "DB-TC-01",
    "category": "数据库",
    "subcategory": "建表规约",
    "description": "表名符合行内规范，同时禁用保留字，如desc、range、match、delayed等，请参考具体数据库官方保留字",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-IR-01",
    "category": "数据库",
    "subcategory": "索引规约",
    "description": "不应对索引列使用函数、运算等操作",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-IR-02",
    "category": "数据库",
    "subcategory": "索引规约",
    "description": "索引使用规范：避免在索引列上使用函数或表达式，确保查询能有效利用索引",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-IR-03",
    "category": "数据库",
    "subcategory": "索引规约",
    "description": "如果WHERE条件中的索引字段使用OR，则宜使用UNION/UNION ALL对语句进行拆分",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-SQ-01",
    "category": "数据库",
    "subcategory": "SQL编写",
    "description": "减少大表连接，连接的表数和嵌套层数均不应大于5",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-SQ-10",
    "category": "数据库",
    "subcategory": "SQL编写",
    "description": "SQL语句中的关键字应大写，表名、字段名等应使用小写。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-SQ-02",
    "category": "数据库",
    "subcategory": "SQL编写",
    "description": "涉及update、delete的语句应指定WHERE条件，并检查条件的正确性",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-SQ-03",
    "category": "数据库",
    "subcategory": "SQL编写",
    "description": "联机程序不可直接使用delete语句",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-SQ-04",
    "category": "数据库",
    "subcategory": "SQL编写",
    "description": "在发变变更SQL脚本实施数据更新时，需要先按主键delete再insert",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-SQ-05",
    "category": "数据库",
    "subcategory": "SQL编写",
    "description": "避免编写复杂SQL，将业务逻辑放到java业务代码中",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-SQ-06",
    "category": "数据库",
    "subcategory": "SQL编写",
    "description": "批量处理数据时宜在500-5000条进行事务提交（commit）",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-SQ-07",
    "category": "数据库",
    "subcategory": "SQL编写",
    "description": "使用MyBatis时，SQL映射配置文件namesapce命名是否规范，检查namesapce命名是否按规范命名，不是随意命名，建议跟文件存在包路径保持一致，如com.icbc.xxx.mapper.xxxxMapper",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-SQ-08",
    "category": "数据库",
    "subcategory": "SQL编写",
    "description": "查询最里层不允许使用select *语句。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-SQ-09",
    "category": "数据库",
    "subcategory": "SQL编写",
    "description": "多表连接必须指定连接条件（如ON、USING等），避免连接结果为笛卡儿积。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-PF-01",
    "category": "数据库",
    "subcategory": "性能",
    "description": "涉及表或分区的整体数据清理，应使用TRUNCATE分区替代DELETE",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-PF-02",
    "category": "数据库",
    "subcategory": "性能",
    "description": "涉及分区表的Where条件中宜使用分区字段",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-PF-03",
    "category": "数据库",
    "subcategory": "性能",
    "description": "交换分区时不应使用without validation",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-PF-04",
    "category": "数据库",
    "subcategory": "性能",
    "description": "分页列表查询所选项的的转换应放在最外层",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-PF-05",
    "category": "数据库",
    "subcategory": "性能",
    "description": "批量程序和联机交易程序应该分开，除非对数据的查询条件完全一致。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "DB-PF-06",
    "category": "数据库",
    "subcategory": "性能",
    "description": "循环语句中必须有明确的出口条件，避免死循环。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-RD-01",
    "category": "代码规范",
    "subcategory": "可读性",
    "description": "单方法不宜超过80行，并遵循单一职责原则。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-RD-02",
    "category": "代码规范",
    "subcategory": "可读性",
    "description": "保持代码风格统一，包括新增代码与原有代码风格保持一致并遵循统一目录结构等",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-RD-03",
    "category": "代码规范",
    "subcategory": "可读性",
    "description": "程序中不要使用魔法数字",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-RD-04",
    "category": "代码规范",
    "subcategory": "可读性",
    "description": "注释要准确并且扼要:1、注释清晰阐述代码意图；2、晦涩难懂的代码辅以详细的注释；3、代码变动时按需同步修改注释",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-RD-05",
    "category": "代码规范",
    "subcategory": "可读性",
    "description": "前端程序代码中的注释不应该在浏览器中进行输出显示。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-RD-06",
    "category": "代码规范",
    "subcategory": "可读性",
    "description": "对JAVA类、接口、构造器、方法进行注释时应使用多行注释，函数内宜使用单行注释",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-RD-07",
    "category": "代码规范",
    "subcategory": "可读性",
    "description": "在编写批量作业代码时，应在其过程和函数的开始处加入注释",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-RD-08",
    "category": "代码规范",
    "subcategory": "可读性",
    "description": "存储过程在输入/输出参数后应使用单行注释，过程或函数内部每个块或大分支的开始处应使用注释说明简要功能。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-RD-09",
    "category": "代码规范",
    "subcategory": "可读性",
    "description": "方法参数个数不宜超过7个，否则应使用对象进行参数传递。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-RD-10",
    "category": "代码规范",
    "subcategory": "可读性",
    "description": "除常用方法（如getXxx/isXxx）等外，不要在条件判断中执行其它复杂的语句，将复杂逻辑判断的结果赋值给一个有意义的布尔变量名，以提高可读性",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-RD-11",
    "category": "代码规范",
    "subcategory": "可读性",
    "description": "类、接口、方法、变量、配置项等命名都应符合公司编码规范，命名尽可能能自解释，望文生义，避免使用读不懂的缩写。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-RD-12",
    "category": "代码规范",
    "subcategory": "可读性",
    "description": "不应在内部代码块中声明相同的变量名，避免声明的局部变量覆盖上一级声明的变量",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EX-01",
    "category": "代码规范",
    "subcategory": "可扩展性",
    "description": "遵循单一职责原则/接口隔离原则。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EX-02",
    "category": "代码规范",
    "subcategory": "可扩展性",
    "description": "循依赖倒置原则，面向接口编程，通过新增实现类扩展新功能",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EX-03",
    "category": "代码规范",
    "subcategory": "可扩展性",
    "description": "参数应可配置，不应在程序中写死，同时禁在投产的版本包、补丁包等生产程序文件中写死参数",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EX-04",
    "category": "代码规范",
    "subcategory": "可扩展性",
    "description": "类要遵循高内聚低耦合原则，类方法避免过多的参数传递，短小简洁",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EX-05",
    "category": "代码规范",
    "subcategory": "可扩展性",
    "description": "避免过度使用集合类，要将经常一起出现的业务元素封装为值对象",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EX-06",
    "category": "代码规范",
    "subcategory": "可扩展性",
    "description": "不要使用一个常量类维护所有常量，要按常量功能进行归类，分开维护",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-DR-01",
    "category": "代码规范",
    "subcategory": "消除重复",
    "description": "项目组使用统一的工具类（涉及日期、字符串、数字等处理）",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-DR-02",
    "category": "代码规范",
    "subcategory": "消除重复",
    "description": "实体行为要统一在实体类封装，不要到处读取实体数据各自处理",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-DR-03",
    "category": "代码规范",
    "subcategory": "消除重复",
    "description": "不同发布单元间共用的业务逻辑可以抽取封装为公共业务构件（jar包形式被引用）",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-DR-04",
    "category": "代码规范",
    "subcategory": "消除重复",
    "description": "技术解决方案要优先使用中心已有框架与中心内部最佳实践",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-SC-01",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "为防止受到XSS攻击，应对通过Web请求获取、通过数据库或其他后端获取的数据进行过滤或转义",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-02",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "为防止受到SQL注入攻击，应对通过Web请求获取、通过数据库或其他后端获取的数据进行预处理，禁止对用户输入的未经过滤的参数进行SQL拼接，对非受信输入应进行净化并验证",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-03",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "为防止受到SQL注入攻击，SQL语句应使用预编译并绑定变量。对于表名、列名等无法预编译的场景，应通过白名单的形式对数据进行校验。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-04",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "应使用权限矩阵或权限认证框架等方式防范垂直越权和水平越权漏洞",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-05",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "服务器端应严格控制HTTP请求的请求方法，禁止支持DELETE、PUT、TRACE、WEBDAV等HTTP方法，仅支持GET、POST等常用HTTP请求方法",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-06",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "为防范重放攻击，应对请求短信验证码，账户交易等场景，增加交易序列号，或者增加token来保证请求的唯一性，序列号的生成可以采用随机数、时间戳等",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-07",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "涉及上传文件等高风险入口时必须在后端校验文件类型，过滤校验特殊字符，设置白名单进行校验。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-08",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "页面报错避免打印堆栈、中间件、内网后台地址等内部信息，敏感信息展示时脱敏屏蔽",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-09",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "不应在新代码中使用已弃用或过时的类和方法",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-10",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "用户角色数据应先从Session中获取。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-11",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "应对数组处理的边界值进行检查，避免数组访问越界。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-12",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "应对来自用户输入，环境变量，配置文件等输入，尽量做白名单校验，先校验后使用。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-13",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "防范Xpath注入攻击，服务端构建Xpath查询语句时，要对用户输入进行合法性校验，禁止不校验拼接Xpath语句",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-14",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "防暴力破解，对于认证场景，是否增加认证失败超过一定次数锁定机制，以防止暴力破解。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-15",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "使用SSL连接时，应验证服务器证书；",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-16",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "SSL版本应大于TLS 1.2",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-17",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "应使用安全随机数java.security.SecureRandom",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-18",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "禁止密码硬编码，禁止使用null或者空密码",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-19",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "对于敏感输入，如身份证号，电话，交易凭证号等，应屏蔽部分位数后显示。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-20",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "文件上传应校验文件名、判断文件内容、限制文件大小并重命名文件。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-21",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "上传可执行文件及脚本（包含但不限于exe、dll、sys、ocx、so、sh、jsp、html等）配合使用白名单校验。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-22",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "应该在系统登录的时候，对sessionid进行更新。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-23",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "退出系统时，清除sessionid。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-24",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "应设置会话超时时间。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-25",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "保存在cookie中的sessionid信息等不需要逻辑操作的属性，应设置httponly属性，避免被javascript获取到。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-26",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "cookie应设置secure属性，通过ssl加密传输",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-27",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "cookie中不应该存放敏感信息。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-SC-28",
    "category": "代码规范",
    "subcategory": "安全性",
    "description": "在对后端资源进行访问的请求，都应增加token，并在后端进行校验，用以防范CSRF攻击。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "CS-CC-01",
    "category": "代码规范",
    "subcategory": "并发与防重",
    "description": "前台按钮设计时应进行防重设计，后端逻辑处理应进行防重控制（如重复提交、入账等）。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-CC-02",
    "category": "代码规范",
    "subcategory": "并发与防重",
    "description": "避免同时加载大量数据，从数据库或者文件中取出大量数据时应进行数据分批次操作处理，并且合理评估常驻JVM堆内存对象占用内存的大小，防止内存溢出",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-CC-03",
    "category": "代码规范",
    "subcategory": "并发与防重",
    "description": "关注如IO流对象、数据库连接等资源使用后是否释放。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-CC-04",
    "category": "代码规范",
    "subcategory": "并发与防重",
    "description": "后台联机小批量作业长时间大流量调用联机服务时，需要关注两边速率匹配，避免联机服务堵塞",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-CC-05",
    "category": "代码规范",
    "subcategory": "并发与防重",
    "description": "高并发场景需评估限流、降级与熔断的处理",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-CC-06",
    "category": "代码规范",
    "subcategory": "并发与防重",
    "description": "高并发场景应减少单笔交易访问数据库次数，减少锁开销",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MR-01",
    "category": "代码规范",
    "subcategory": "可维护性/可复用性",
    "description": "通用功能新增要先确认是否有存量实现",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MR-02",
    "category": "代码规范",
    "subcategory": "可维护性/可复用性",
    "description": "公共逻辑代码要及时的抽取与沉淀，对业务逻辑相同的代码进行代码复用处理",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MR-03",
    "category": "代码规范",
    "subcategory": "可维护性/可复用性",
    "description": "原则上对于圈复杂度大于15以上的复杂逻辑代码,应考虑抽取其逻辑，形成新的函数方法",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MR-04",
    "category": "代码规范",
    "subcategory": "可维护性/可复用性",
    "description": "异常业务场景应有相应的分支覆盖处理。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MR-05",
    "category": "代码规范",
    "subcategory": "可维护性/可复用性",
    "description": "程序中多次重复使用的固定值应抽取常量。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EH-01",
    "category": "代码规范",
    "subcategory": "异常处理",
    "description": "处理异常应该杜绝生吞，并确保异常栈信息得到保留",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EH-02",
    "category": "代码规范",
    "subcategory": "异常处理",
    "description": "重新抛出异常的话，要使用具有意义的异常类型和异常消息",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EH-03",
    "category": "代码规范",
    "subcategory": "异常处理",
    "description": "异常处理要遵循开发团队的规约，进行必要的事件监控报送与自动重试处理",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EH-04",
    "category": "代码规范",
    "subcategory": "异常处理",
    "description": "事务场景中，抛出异常被catch后，需关注事务回滚。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EH-05",
    "category": "代码规范",
    "subcategory": "异常处理",
    "description": "系统运行错误应在catch代码块处理时进行异常捕获并登记日志。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EH-06",
    "category": "代码规范",
    "subcategory": "异常处理",
    "description": "应尽可能捕获特定的异常并进行相应的处理。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EH-07",
    "category": "代码规范",
    "subcategory": "异常处理",
    "description": "当代码抛出多类异常时应关注异常匹配的顺序",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EH-08",
    "category": "代码规范",
    "subcategory": "异常处理",
    "description": "不允许使用e.printStackTrace()，不允许使用System.out，System.err打印日志",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EH-09",
    "category": "代码规范",
    "subcategory": "异常处理",
    "description": "禁止捕获NullPointException和RunTimeException异常。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EH-10",
    "category": "代码规范",
    "subcategory": "异常处理",
    "description": "使用错误页面时，应该设置自定义的统一错误页面，防止遇到系统错误时跳转到容器默认错误页面，暴露后台实现细节。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-EH-11",
    "category": "代码规范",
    "subcategory": "异常处理",
    "description": "不应该在异常信息里面暴露敏感信息，包括但不限于数据库版本，数据库信息，操作系统版本信息，堆栈信息，文件路径，客户敏感信息等。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-LG-01",
    "category": "代码规范",
    "subcategory": "日志打印",
    "description": "合理使用日志级别，记录业务关键信息。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-LG-02",
    "category": "代码规范",
    "subcategory": "日志打印",
    "description": "避免产生大批量的重复日志",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-LG-03",
    "category": "代码规范",
    "subcategory": "日志打印",
    "description": "接入日志中心的日志必须完成脱敏操作",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MT-01",
    "category": "代码规范",
    "subcategory": "多线程",
    "description": "线程资源应通过线程池提供，严禁使用new Thread()方式创建线程。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MT-02",
    "category": "代码规范",
    "subcategory": "多线程",
    "description": "创建线程池宜使用ThreadPoolExecutor且声明队列深度和拒绝策略。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MT-03",
    "category": "代码规范",
    "subcategory": "多线程",
    "description": "程序并发执行过程中是否正确处理了线程异常的场景。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MT-04",
    "category": "代码规范",
    "subcategory": "多线程",
    "description": "创建线程或线程池时请指定有意义的线程名称，方便出错时回溯",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MT-05",
    "category": "代码规范",
    "subcategory": "多线程",
    "description": "对多个资源、数据库表、对象同时加锁时，需要保持一致的加锁顺序，否则可能会造成死锁",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MT-06",
    "category": "代码规范",
    "subcategory": "多线程",
    "description": "同步块的范围应遵守最小范围原则，使用同步代码块替代同步方法",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MT-07",
    "category": "代码规范",
    "subcategory": "多线程",
    "description": "使用单例（Singleton）对象、enum对象、类静态属性等全局变量，必须确保线程安全。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MT-08",
    "category": "代码规范",
    "subcategory": "多线程",
    "description": "多线程设计必须要设计停止线程的接口，支持紧急情况优雅停止",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-IF-01",
    "category": "代码规范",
    "subcategory": "接口检查",
    "description": "应按接口文档对主机接口或联机接口的参数进行检查，保证变量和接口约定一致。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-PF-01",
    "category": "代码规范",
    "subcategory": "性能优化",
    "description": "在循环体代码中使用\"+\"进行字符串拼接，应使用StringBuilder/StringBuffer。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-PF-02",
    "category": "代码规范",
    "subcategory": "性能优化",
    "description": "不应集中创建对象，尤其是大对象。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MM-01",
    "category": "代码规范",
    "subcategory": "内存",
    "description": "列表展现需进行分页处理，分页在数据库中完成，禁止将全量数据查到JAVA进程中分页，避免内存溢出",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MM-02",
    "category": "代码规范",
    "subcategory": "内存",
    "description": "文件下载应控制记录条数，避免内存溢出。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MM-03",
    "category": "代码规范",
    "subcategory": "内存",
    "description": "应合理评估常驻JVM堆内存的Hash对象占用内存的大小，避免内存溢出。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-MM-04",
    "category": "代码规范",
    "subcategory": "内存",
    "description": "应回收自定义的ThreadLocal变量，否则可能会影响后续业务逻辑和造成内存泄露等问题。尽量在代码中使用try-finally块进行回收。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-IV-01",
    "category": "代码规范",
    "subcategory": "输入校验",
    "description": "外部输入是否均做了校验，如非空检查、金额范围检查、长度校验等等。一般在处理业务逻辑时遵循先检查、后处理的原则。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-IC-01",
    "category": "代码规范",
    "subcategory": "接口调用",
    "description": "对安全性较高的接口，需加密返回处理",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-IC-02",
    "category": "代码规范",
    "subcategory": "接口调用",
    "description": "公共通讯区（渠道通讯区与公共交易信息通讯区）要统一按照中心规范定义",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-IC-03",
    "category": "代码规范",
    "subcategory": "接口调用",
    "description": "返回信息最小化，尽可能的精简对外暴露的信息",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-IC-04",
    "category": "代码规范",
    "subcategory": "接口调用",
    "description": "接口返回码应满足中心规范，返回8位码",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-IC-05",
    "category": "代码规范",
    "subcategory": "接口调用",
    "description": "服务（名词）与方法（动词或动名词）命名符合中心规范",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-IC-06",
    "category": "代码规范",
    "subcategory": "接口调用",
    "description": "接口与方法要按类型、业务重要程度、调用量做好拆分，方便后续对重要业务进行隔离与降级处理",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-IC-07",
    "category": "代码规范",
    "subcategory": "接口调用",
    "description": "接口入参和出参登记到渠道日志或应用日志",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-VB-01",
    "category": "代码规范",
    "subcategory": "版本基础",
    "description": "是否当期版本规划改动内容，非当期版本规划内容评估是否紧急需当期解决",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-VB-02",
    "category": "代码规范",
    "subcategory": "版本基础",
    "description": "修改公共构件需按规范升级版本号并评估存量调用方是否需配合修改",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-OT-01",
    "category": "代码规范",
    "subcategory": "其他",
    "description": "任何货币金额，均以最小货币单位且整型类型来进行存储。行内使用分为单位",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-OT-02",
    "category": "代码规范",
    "subcategory": "其他",
    "description": "服务注册时检查注册参数是否正确，如服务版本version、超时时间timeout、服务暴露方式exposed、重试次数retries，以及禁止单园区注册",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-OT-03",
    "category": "代码规范",
    "subcategory": "其他",
    "description": "禁止在正式文件中带出调试代码，避免影响生产运行。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-OT-04",
    "category": "代码规范",
    "subcategory": "其他",
    "description": "import时应指定具体的类名，避免使用*号，以提高编译速度、避免命名冲突。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "CS-OT-05",
    "category": "代码规范",
    "subcategory": "其他",
    "description": "避免通过一个类的对象引用访问此类的静态变量或静态方法，无谓增加编译器解析成本，直接用类名来访问即可",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "GIT-PC-01",
    "category": "GIT",
    "subcategory": "程序提交",
    "description": "缺陷类DCM问题（包括研发问题、适应性问题、生产问题），答复修改完成前，必须关联GIT提交记录",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "GIT-PC-02",
    "category": "GIT",
    "subcategory": "程序提交",
    "description": "编码工作量不为0的设计编码JIRA任务，答复编码完成前，必须关联GIT提交记录",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "GIT-PC-03",
    "category": "GIT",
    "subcategory": "程序提交",
    "description": "单测代码中，必须mock外部依赖（含远程数据库，接口或本地文件），避免流水线运行失败",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "FE-PC-01",
    "category": "前端",
    "subcategory": "前端代码提交",
    "description": "前端非查询类操作都必须避免重复点击。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "FE-PC-02",
    "category": "前端",
    "subcategory": "前端代码提交",
    "description": "删除等危险操作之前必须弹框与用户确认。",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "FE-PC-03",
    "category": "前端",
    "subcategory": "前端代码提交",
    "description": "新增页面处理需要同步考虑支持IE、EDGE、国产浏览器流程",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "SH-SEC-01",
    "category": "安全性",
    "subcategory": "输入验证",
    "description": "所有外部输入（参数/文件/环境变量）必须经过过滤，使用引号包裹变量防止命令注入（如\"$var\"），特殊字符需转义处理",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "SH-SEC-02",
    "category": "安全性",
    "subcategory": "权限管理",
    "description": "禁止使用不必要的sudo权限，文件权限需符合最小权限原则（如chmod 600替代777），敏感操作需交互确认",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "SH-SEC-03",
    "category": "安全性",
    "subcategory": "敏感信息",
    "description": "禁止硬编码密码/密钥，凭证必须通过加密配置文件或密钥管理系统获取",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "SH-STR-01",
    "category": "健壮性",
    "subcategory": "错误处理",
    "description": "必须在脚本头部声明set -euo pipefail，关键命令需检查返回值（如if ! cmd; then exit 1; fi）",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium High"
  },
  {
    "id": "SH-STR-02",
    "category": "健壮性",
    "subcategory": "资源管理",
    "description": "临时文件必须使用mktemp创建，通过trap机制确保脚本中断时清理资源",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium High"
  },
  {
    "id": "SH-MNT-01",
    "category": "可维护性",
    "subcategory": "代码结构",
    "description": "超过50行的脚本必须模块化为函数，复杂逻辑需添加行内注释说明",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "SH-MNT-02",
    "category": "可维护性",
    "subcategory": "兼容性",
    "description": "必须明确声明解释器版本（如#!/usr/bin/env bash），避免使用GNU/BSD系统特有语法",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "SH-PER-01",
    "category": "性能",
    "subcategory": "资源优化",
    "description": "处理大文件时必须使用流式处理（如while read循环），禁止全量加载到内存",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium High"
  },
  {
    "id": "SH-DOC-01",
    "category": "可运维性",
    "subcategory": "使用文档",
    "description": "必须包含--help帮助说明，关键参数需提供示例用法",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Low"
  },
    {
    "id": "SH-SEC-01",
    "category": "安全性",
    "subcategory": "输入验证",
    "description": "所有外部输入（参数/文件/环境变量）必须经过过滤，使用引号包裹变量防止命令注入（如\"$var\"），特殊字符需转义处理",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "SH-SEC-02",
    "category": "安全性",
    "subcategory": "权限管理",
    "description": "禁止使用不必要的sudo权限，文件权限需符合最小权限原则（如chmod 600替代777），敏感操作需交互确认",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "SH-SEC-03",
    "category": "安全性",
    "subcategory": "敏感信息",
    "description": "禁止硬编码密码/密钥，凭证必须通过加密配置文件或密钥管理系统获取",
    "implementationStatus": "IMPLEMENTED",
    "priority": "High"
  },
  {
    "id": "SH-STR-01",
    "category": "健壮性",
    "subcategory": "错误处理",
    "description": "必须在脚本头部声明set -euo pipefail，关键命令需检查返回值（如if ! cmd; then exit 1; fi）",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium High"
  },
  {
    "id": "SH-STR-02",
    "category": "健壮性",
    "subcategory": "资源管理",
    "description": "临时文件必须使用mktemp创建，通过trap机制确保脚本中断时清理资源",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium High"
  },
  {
    "id": "SH-MNT-01",
    "category": "可维护性",
    "subcategory": "代码结构",
    "description": "超过50行的脚本必须模块化为函数，复杂逻辑需添加行内注释说明",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "SH-MNT-02",
    "category": "可维护性",
    "subcategory": "兼容性",
    "description": "必须明确声明解释器版本（如#!/usr/bin/env bash），避免使用GNU/BSD系统特有语法",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium"
  },
  {
    "id": "SH-PER-01",
    "category": "性能",
    "subcategory": "资源优化",
    "description": "处理大文件时必须使用流式处理（如while read循环），禁止全量加载到内存",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Medium High"
  },
  {
    "id": "SH-DOC-01",
    "category": "可运维性",
    "subcategory": "使用文档",
    "description": "必须包含--help帮助说明，关键参数需提供示例用法",
    "implementationStatus": "IMPLEMENTED",
    "priority": "Low"
  }
]